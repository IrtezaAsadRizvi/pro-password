import type { Metadata } from "next";
import Navigation from "@/components/navigation/Navigation";
import { ReactNode } from "react";
import { notFound } from "next/navigation";
import { NextIntlClientProvider, type AbstractIntlMessages } from "next-intl";
import StoreProvider from "@/state/StoreProvider";
import { DM_Sans } from "next/font/google";

const dmSans = DM_Sans({
  subsets: ["latin"],
  weight: ["400", "500", "700"],
});

const LOCALES = ["en", "fr"] as const;
type Locale = typeof LOCALES[number];

type Props = {
  children: ReactNode;
  params: { locale: Locale };
};

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getMessages(locale: Locale): Promise<AbstractIntlMessages> {
  try {
    return (await import(`../../messages/${locale}.json`)).default;
  } catch {
    notFound();
  }
}

export function generateStaticParams(): Array<{ locale: Locale }> {
  return LOCALES.map((l) => ({ locale: l }));
  // Alternatively:
  // return [{ locale: "en" as const }, { locale: "fr" as const }];
}

export default async function RootLayout({ children, params: { locale } }: Props) {
  const messages = await getMessages(locale);

  return (
    <html lang={locale}>
      <body className={`${dmSans.className}`}>
        <StoreProvider>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <Navigation />
            <div className="p-5">{children}</div>
          </NextIntlClientProvider>
        </StoreProvider>
      </body>
    </html>
  );
}
